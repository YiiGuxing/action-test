# GitHub Actions Workflow created for handling the release process based on the draft release prepared
# with the Build workflow. Running the publishPlugin task requires the PUBLISH_TOKEN secret provided.

name: Release

on:
  release:
    types: [released]

env:
  AUTO_SNAPSHOT_VERSION: false

jobs:

  # Prepare and publish the plugin to the Marketplace repository
  release:
    name: Publish Plugin
    runs-on: ubuntu-latest
    steps:

      # Check out current repository
      - name: Fetch Sources
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.release.tag_name }}

      # Setup Java 11 environment for the next steps
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: zulu
          java-version: 11
          cache: gradle

      # Set environment variables
      - name: Export Properties
        id: properties
        shell: bash
        run: |
          chmod +x ./gradlew
          PROPERTIES="$(./gradlew properties --console=plain -q)"
          PLUGIN_VERSION="${{ github.event.release.tag_name }}"
          PLUGIN_PRERELEASE_VERSION=""
          PLUGIN_BUILD_METADATA=""
          CHANGELOG="$(cat << 'EOM' | sed -e "/## What's Changed/d" -e 's/^[[:space:]]*$//g' -e '/./,$!d'
          ${{ github.event.release.body }}
          EOM
          )"
          
          echo "pluginVersion: $PLUGIN_VERSION"
          echo "pluginPrereleaseVersion: $PLUGIN_PRERELEASE_VERSION"
          echo "pluginBuildMetadata: $PLUGIN_BUILD_METADATA"
          echo "changelog:"
          echo "$CHANGELOG"

          echo "pluginVersion=$PLUGIN_VERSION" >> $GITHUB_OUTPUT
          echo "pluginPrereleaseVersion=$PLUGIN_PRERELEASE_VERSION" >> $GITHUB_OUTPUT
          echo "pluginBuildMetadata=$PLUGIN_BUILD_METADATA" >> $GITHUB_OUTPUT

          echo 'changelog<<EOF' >> $GITHUB_OUTPUT
          echo "$CHANGELOG" >> $GITHUB_OUTPUT
          echo 'EOF' >> $GITHUB_OUTPUT

      # Update Unreleased section with the current release note
      - name: Patch Changelog
        if: steps.properties.outputs.pluginBuildMetadata == '' && steps.properties.outputs.changelog != ''
        env:
          CHANGELOG: ${{ steps.properties.outputs.changelog }}
        run: |
          ./gradlew patchChangelog \
            --release-note="$(cat << 'EOM'
              ${{ steps.properties.outputs.changelog }}
              EOM
              )"

      # Create pull request
      - name: Create Pull Request
        if: steps.properties.outputs.pluginBuildMetadata == '' && steps.properties.outputs.changelog != ''
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          VERSION="${{ github.event.release.tag_name }}"
          BRANCH="changelog-update-$VERSION"
          LABEL="release changelog ðŸ“‘"

          git config user.email "action@github.com"
          git config user.name "GitHub Action"

          git checkout -b $BRANCH
          git commit -am ":rocket: ${VERSION}" -m "[skip ci]"
          git push --set-upstream origin $BRANCH
          
          gh label create "$LABEL" \
            --color B39DDB \
            --description "Pull requests with release changelog update" \
            || true

          gh pr create \
            --title ":rocket: \`$VERSION\`" \
            --body "Current pull request contains patched \`CHANGELOG.md\` file for the \`$VERSION\` version." \
            --base "${{ github.event.release.target_commitish }}" \
            --head $BRANCH