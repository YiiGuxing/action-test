# GitHub Actions Workflow created for testing and preparing the plugin release in the following steps:
# - validate Gradle Wrapper,
# - run test and verifyPlugin tasks,
# - run buildPlugin task and prepare artifact for the further tests,
# - run IntelliJ Plugin Verifier,
# - create a draft release.
#
# Workflow is triggered on push and pull_request events.
#
# Docs:
# - GitHub Actions: https://help.github.com/en/actions
# - IntelliJ Plugin Verifier GitHub Action: https://github.com/ChrisCarini/intellij-platform-plugin-verifier-action

name: Build
on:
  # Trigger the workflow on pushes to only the 'master' branch (this avoids duplicate checks being run e.g. for dependabot pull requests)
  push:
    branches:
      - main

jobs:

  # Run Gradle Wrapper Validation Action to verify the wrapper's checksum
  # Run verifyPlugin, IntelliJ Plugin Verifier, and test Gradle tasks
  # Build plugin and provide the artifact for the next workflow jobs
  build:
    name: Build
    runs-on: ubuntu-latest
#    outputs:
#      version: ${{ steps.properties.outputs.version }}
#      changelog: ${{ steps.properties.outputs.changelog }}
    steps:

      # Free GitHub Actions Environment Disk Space
      - name: Maximize Build Space
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /opt/ghc

      # Check out current repository
      - name: Fetch Sources
        uses: actions/checkout@v3

      # Validate wrapper
      - name: Gradle Wrapper Validation
        uses: gradle/wrapper-validation-action@v1.0.6

      # Setup Java 11 environment for the next steps
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: zulu
          java-version: 11
          cache: gradle

      # Set environment variables
      - name: Export Properties
        id: properties
        env:
          AUTO_SNAPSHOT_VERSION: false
        shell: bash
        run: |
#          PROPERTIES="$(./gradlew properties --console=plain -q)"
#          VERSION="$(echo "$PROPERTIES" | grep "^version:" | cut -f2- -d ' ')"
#          CHANGELOG="$(./gradlew getChangelog --unreleased --no-header --no-links --console=plain -q)"
#
#          echo "version: $VERSION"
#          echo "changelog:"
#          echo "$CHANGELOG"
#
#          echo "version=$VERSION" >> $GITHUB_OUTPUT
#          echo "pluginVerifierHomeDir=~/.pluginVerifier" >> $GITHUB_OUTPUT
#
#          echo 'changelog<<EOF' >> $GITHUB_OUTPUT
#          echo "$CHANGELOG" >> $GITHUB_OUTPUT
#          echo 'EOF' >> $GITHUB_OUTPUT
          ./gradlew --version
          ./gradlew properties --console=plain -q --stacktrace --debug